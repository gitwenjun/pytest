{"name": "查询会员成功测试用例", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcases.test_login_excel.TestLoginQuery object at 0x0000029FA6080C08>\narg = {'data': '{\\'params\\':{\\'uuid\\':\"${read_extrct_yaml(uuid)}\",\\'token\\':\\'${read_extrct_yaml(token)}\\',\\'app_key\\':\\'A74...9751\\'}}', 'extract': '{\\'uuid\\': \"$.data.uuid\",\\'token\\':\\'\"token\":\"(.*?)\"\\'}', 'feature': '会员接口', 'headers': '', ...}\n\n    @allure.step(\"第三步\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.issue(\"https://www.baidu.com\", name=\"禅道BUG的链接\")\n    @allure.testcase(\"https://www.jd.com\", name=\"测试用例的链接\")\n    @pytest.mark.test\n    @pytest.mark.run(order=3)\n    @pytest.mark.parametrize(\"arg\",ExcelOperate(\"query_test.xls\").read_excel())\n    def test_query(self, arg):\n        allure.dynamic.feature(arg[\"feature\"])\n        allure.dynamic.title(arg[\"name\"])\n>       ExcelRequestUtil(YamlHandler()).stand_yaml(arg)\n\ntestcases\\test_login_excel.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\request_excel.py:156: in stand_yaml\n    self.assert_result(caseinfo[\"validate\"], ressult_json, ressult_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.request_excel.ExcelRequestUtil object at 0x0000029FA605BA08>\nyq_result = [{'equals': {'status_code': 201}}, {'contains': 'data'}]\nsj_result = {'_auth': '31646122606e89f73660f78a8dde22a4', '_t': 1680080843, 'data': {'err_code': 0, 'err_msg': '', 'info': {'ext_i..., ...}, 'register_ip': '222.209.111.69', 'register_time': '2023-02-19 11:15:32', 'role': 'user', ...}}, 'msg': '', ...}\nreturn_code = 200\n\n    def assert_result(self, yq_result, sj_result, return_code):\n        all_flag = 0\n        yq_result = eval(yq_result)\n        for yq in yq_result:\n            for key, value in yq.items():\n                if key == \"equals\":\n                    flag = self.equals_assert(value, return_code, sj_result)\n                    all_flag = all_flag + flag\n                elif key == \"contains\":\n                    flag = self.contains_assert(value, sj_result)\n                    all_flag = all_flag + flag\n                else:\n                    print(\"暂不支持此断言\")\n>       assert all_flag == 0\nE       AssertionError\n\ncommon\\request_excel.py:88: AssertionError"}, "steps": [{"name": "第三步", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"G:\\Project\\API_1\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"G:\\Project\\API_1\\testcases\\test_login_excel.py\", line 60, in test_query\n    ExcelRequestUtil(YamlHandler()).stand_yaml(arg)\n  File \"G:\\Project\\API_1\\common\\request_excel.py\", line 156, in stand_yaml\n    self.assert_result(caseinfo[\"validate\"], ressult_json, ressult_code)\n  File \"G:\\Project\\API_1\\common\\request_excel.py\", line 88, in assert_result\n    assert all_flag == 0\n"}, "parameters": [{"name": "arg", "value": "{'feature': '会员接口', 'name': '查询会员成功测试用例', 'method': 'get', 'url': 'http://hn216.api.yesapi.cn/?s=App.User.Profile', 'headers': '', 'data': '{\\'params\\':{\\'uuid\\':\"${read_extrct_yaml(uuid)}\",\\'token\\':\\'${read_extrct_yaml(token)}\\',\\'app_key\\':\\'A745B9D2CF7B8495944441DBF1BE9751\\'}}', 'extract': '{\\'uuid\\': \"$.data.uuid\",\\'token\\':\\'\"token\":\"(.*?)\"\\'}', 'validate': \"[{'equals':{'status_code':201}},{'contains':'data'}]\"}"}], "start": 1680080844659, "stop": 1680080844728}], "attachments": [{"name": "log", "source": "47fe1f98-ac76-422d-8d2c-33661f078bde-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "arg", "value": "{'feature': '会员接口', 'name': '查询会员成功测试用例', 'method': 'get', 'url': 'http://hn216.api.yesapi.cn/?s=App.User.Profile', 'headers': '', 'data': '{\\'params\\':{\\'uuid\\':\"${read_extrct_yaml(uuid)}\",\\'token\\':\\'${read_extrct_yaml(token)}\\',\\'app_key\\':\\'A745B9D2CF7B8495944441DBF1BE9751\\'}}', 'extract': '{\\'uuid\\': \"$.data.uuid\",\\'token\\':\\'\"token\":\"(.*?)\"\\'}', 'validate': \"[{'equals':{'status_code':201}},{'contains':'data'}]\"}"}], "start": 1680080844659, "stop": 1680080844729, "uuid": "f22b57d2-ab47-4446-bea2-f55cbb2a5d11", "historyId": "ad54bcd5e01a4b3d9d1fe25beae193dc", "testCaseId": "8e82c6eaad15bd0eac451921528cf780", "fullName": "testcases.test_login_excel.TestLoginQuery#test_query", "labels": [{"name": "feature", "value": "会员接口"}, {"name": "epic", "value": "会员接口总体描述"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "run(order=3)"}, {"name": "tag", "value": "test"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login_excel"}, {"name": "subSuite", "value": "TestLoginQuery"}, {"name": "host", "value": "DESKTOP-76566J4"}, {"name": "thread", "value": "15160-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login_excel"}], "links": [{"type": "test_case", "url": "https://www.jd.com", "name": "测试用例的链接"}, {"type": "issue", "url": "https://www.baidu.com", "name": "禅道BUG的链接"}]}